#!/bin/sh
#
# build a PostgreSQL module based on PGXS for give list of supported major
# versions
#
# Author: Dimitri Fontaine <dfontaine@hi-media.com>

set -e

action="$1"
srcdir="${2:-`pwd`}"
target="$3"
opt="$4"

die() {
    echo "`basename $0`: error: $*" >&2
    exit 1
}

prepare_env() {
    version=$1
    vtarget=`echo $target | sed -e "s:%v:$version:g"`
    pgc="/usr/lib/postgresql/$version/bin/pg_config"
    [ -e "$pgc" ] || die "$pgc does not exists"
}

configure() {
    prepare_env $1
    confopts=`echo $opt | sed -e "s:%v:$version:g"`

    mkdir -p $vtarget
    ( echo "calling configure in $vtarget" &&
      cd $vtarget && $srcdir/configure $confopts DESTDIR="$srcdir/debian/$package" PG_CONFIG="$pgc" VPATH="$srcdir" )
}

build() {
    prepare_env $1
    cflags="`$pgc --cflags` `echo $opt | sed -e "s:%v:$version:g"`"

    mkdir -p $vtarget
    # if a Makefile was created by configure, use it, else the top level Makefile
    [ -f $vtarget/Makefile ] || makefile="-f $srcdir/Makefile"
    make -C $vtarget $makefile CFLAGS="$cflags" DESTDIR="$srcdir/debian/$package" PG_CONFIG="$pgc" VPATH="$srcdir"
}

install() {
    prepare_env $1
    package=`echo $opt | sed -e "s:%v:$version:g"`

    mkdir -p $vtarget
    # if a Makefile was created by configure, use it, else the top level Makefile
    [ -f $vtarget/Makefile ] || makefile="-f $srcdir/Makefile"
    make -C $vtarget $makefile install DESTDIR="$srcdir/debian/$package" PG_CONFIG="$pgc" VPATH="$srcdir"
}

clean() {
    prepare_env $1

    # if a Makefile was created by configure, use it, else the top level Makefile
    [ -f $vtarget/Makefile ] || makefile="-f $srcdir/Makefile"
    [ -d $vtarget ] && make -C $vtarget clean $makefile DESTDIR="$srcdir/debian/$package" PG_CONFIG="$pgc" VPATH="$srcdir"
    rm -rf $vtarget
}

versions() {
    [ -e /usr/share/postgresql-common/supported-versions ] ||
	die "/usr/share/postgresql-common/supported-versions not found"
    [ -e $srcdir/debian/pgversions ] || die "$srcdir/debian/pgversions not found"
    for v in `/usr/share/postgresql-common/supported-versions`
    do
	if grep -q "^$v" $srcdir/debian/pgversions ; then echo $v ; fi
    done
}

[ "$srcdir" ] || die "syntax: pg_buildext <action> <srcdir> ..."
[ -d $srcdir ] || die "no such directory '$srcdir'"

VERSIONS=`versions`

for v in $VERSIONS
do
    case "$action" in
	"supported-versions")
	    echo $v
	    ;;

	configure|build|install|clean)
	    [ "$target" ] || die "syntax: pg_buildext $action <srcdir> <target> ..."
	    # be verbose?
	    $action $v
	    ;;

	*)
	    die "unsupported $action."
	    ;;
    esac
done
